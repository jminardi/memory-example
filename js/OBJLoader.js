THREE.OBJLoader=function(){var k=/^[og]\s*(.+)?/,q=/^mtllib /,K=/^usemtl /,Q=/^usemap /;function W(){var t={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(t,e){if(this.object&&!1===this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=!1!==e);var r,i=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object={name:t||"",fromDeclaration:!1!==e,geometry:{vertices:[],normals:[],colors:[],uvs:[]},materials:[],smooth:!0,startMaterial:function(t,e){var r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);var i={index:this.materials.length,name:t||"",mtllib:Array.isArray(e)&&0<e.length?e[e.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(t){var e={index:"number"==typeof t?t:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return e.clone=this.clone.bind(e),e}};return this.materials.push(i),i},currentMaterial:function(){if(0<this.materials.length)return this.materials[this.materials.length-1]},_finalize:function(t){var e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&1<this.materials.length)for(var r=this.materials.length-1;0<=r;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}},i&&i.name&&"function"==typeof i.clone&&((r=i.clone(0)).inherited=!0,this.object.materials.push(r)),this.objects.push(this.object)},finalize:function(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)},parseVertexIndex:function(t,e){var r=parseInt(t,10);return 3*(0<=r?r-1:r+e/3)},parseNormalIndex:function(t,e){var r=parseInt(t,10);return 3*(0<=r?r-1:r+e/3)},parseUVIndex:function(t,e){var r=parseInt(t,10);return 2*(0<=r?r-1:r+e/2)},addVertex:function(t,e,r){var i=this.vertices,s=this.object.geometry.vertices;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addVertexPoint:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addVertexLine:function(t){var e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])},addNormal:function(t,e,r){var i=this.normals,s=this.object.geometry.normals;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addColor:function(t,e,r){var i=this.colors,s=this.object.geometry.colors;s.push(i[t+0],i[t+1],i[t+2]),s.push(i[e+0],i[e+1],i[e+2]),s.push(i[r+0],i[r+1],i[r+2])},addUV:function(t,e,r){var i=this.uvs,s=this.object.geometry.uvs;s.push(i[t+0],i[t+1]),s.push(i[e+0],i[e+1]),s.push(i[r+0],i[r+1])},addUVLine:function(t){var e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])},addFace:function(t,e,r,i,s,a,o,n,l){var h,c,u=this.vertices.length,p=this.parseVertexIndex(t,u),m=this.parseVertexIndex(e,u),d=this.parseVertexIndex(r,u);this.addVertex(p,m,d),0<this.colors.length&&this.addColor(p,m,d),void 0!==i&&""!==i&&(h=this.uvs.length,p=this.parseUVIndex(i,h),m=this.parseUVIndex(s,h),d=this.parseUVIndex(a,h),this.addUV(p,m,d)),void 0!==o&&""!==o&&(c=this.normals.length,p=this.parseNormalIndex(o,c),m=o===n?p:this.parseNormalIndex(n,c),d=o===l?p:this.parseNormalIndex(l,c),this.addNormal(p,m,d))},addPointGeometry:function(t){this.object.geometry.type="Points";for(var e=this.vertices.length,r=0,i=t.length;r<i;r++)this.addVertexPoint(this.parseVertexIndex(t[r],e))},addLineGeometry:function(t,e){this.object.geometry.type="Line";for(var r=this.vertices.length,i=this.uvs.length,s=0,a=t.length;s<a;s++)this.addVertexLine(this.parseVertexIndex(t[s],r));for(var o=0,a=e.length;o<a;o++)this.addUVLine(this.parseUVIndex(e[o],i))}};return t.startObject("",!1),t}function t(t){THREE.Loader.call(this,t),this.materials=null}return t.prototype=Object.assign(Object.create(THREE.Loader.prototype),{constructor:t,load:function(t,e,r,i){var s=this,a=new THREE.FileLoader(s.manager);a.setPath(this.path),a.load(t,function(t){e(s.parse(t))},r,i)},setMaterials:function(t){return this.materials=t,this},parse:function(t){var e=new W;-1!==t.indexOf("\r\n")&&(t=t.replace(/\r\n/g,"\n")),-1!==t.indexOf("\\\n")&&(t=t.replace(/\\\n/g,""));for(var r,i=t.split("\n"),s="",a="",o=[],n="function"==typeof"".trimLeft,l=0,h=i.length;l<h;l++)if(s=i[l],0!==(s=n?s.trimLeft():s.trim()).length&&"#"!==(a=s.charAt(0)))if("v"===a){var c=s.split(/\s+/);switch(c[0]){case"v":e.vertices.push(parseFloat(c[1]),parseFloat(c[2]),parseFloat(c[3])),7<=c.length&&e.colors.push(parseFloat(c[4]),parseFloat(c[5]),parseFloat(c[6]));break;case"vn":e.normals.push(parseFloat(c[1]),parseFloat(c[2]),parseFloat(c[3]));break;case"vt":e.uvs.push(parseFloat(c[1]),parseFloat(c[2]))}}else if("f"===a){for(var u=s.substr(1).trim().split(/\s+/),p=[],m=0,d=u.length;m<d;m++){var f,v=u[m];0<v.length&&(f=v.split("/"),p.push(f))}for(var g=p[0],m=1,d=p.length-1;m<d;m++){var b=p[m],E=p[m+1];e.addFace(g[0],b[0],E[0],g[1],b[1],E[1],g[2],b[2],E[2])}}else if("l"===a){var j=s.substring(1).trim().split(" "),x=[],y=[];if(-1===s.indexOf("/"))x=j;else for(var T=0,L=j.length;T<L;T++){var R=j[T].split("/");""!==R[0]&&x.push(R[0]),""!==R[1]&&y.push(R[1])}e.addLineGeometry(x,y)}else if("p"===a){var H=s.substr(1).trim().split(" ");e.addPointGeometry(H)}else if(null!==(o=k.exec(s))){var w=(" "+o[0].substr(1).trim()).substr(1);e.startObject(w)}else if(K.test(s))e.object.startMaterial(s.substring(7).trim(),e.materialLibraries);else if(q.test(s))e.materialLibraries.push(s.substring(7).trim());else if(Q.test(s))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if("s"===a){1<(o=s.split(" ")).length?(r=o[1].trim().toLowerCase(),e.object.smooth="0"!==r&&"off"!==r):e.object.smooth=!0,(D=e.object.currentMaterial())&&(D.smooth=e.object.smooth)}else{if("\0"===s)continue;console.warn('THREE.OBJLoader: Unexpected line: "'+s+'"')}e.finalize();var V=new THREE.Group;V.materialLibraries=[].concat(e.materialLibraries);for(l=0,h=e.objects.length;l<h;l++){var M=e.objects[l],F=M.geometry,I=M.materials,A="Line"===F.type,P="Points"===F.type,z=!1;if(0!==F.vertices.length){var B=new THREE.BufferGeometry;B.setAttribute("position",new THREE.Float32BufferAttribute(F.vertices,3)),0<F.normals.length?B.setAttribute("normal",new THREE.Float32BufferAttribute(F.normals,3)):B.computeVertexNormals(),0<F.colors.length&&(z=!0,B.setAttribute("color",new THREE.Float32BufferAttribute(F.colors,3))),0<F.uvs.length&&B.setAttribute("uv",new THREE.Float32BufferAttribute(F.uvs,2));for(var O,C=[],U=0,_=I.length;U<_;U++){var G,N,S=(J=I[U]).name+"_"+J.smooth+"_"+z,D=e.materials[S];null!==this.materials&&(D=this.materials.create(J.name),!A||!D||D instanceof THREE.LineBasicMaterial?!P||!D||D instanceof THREE.PointsMaterial||(G=new THREE.PointsMaterial({size:10,sizeAttenuation:!1}),THREE.Material.prototype.copy.call(G,D),G.color.copy(D.color),G.map=D.map,D=G):(N=new THREE.LineBasicMaterial,THREE.Material.prototype.copy.call(N,D),N.color.copy(D.color),D=N)),void 0===D&&((D=A?new THREE.LineBasicMaterial:P?new THREE.PointsMaterial({size:1,sizeAttenuation:!1}):new THREE.MeshPhongMaterial).name=J.name,D.flatShading=!J.smooth,D.vertexColors=z,e.materials[S]=D),C.push(D)}if(1<C.length){for(U=0,_=I.length;U<_;U++){var J=I[U];B.addGroup(J.groupStart,J.groupCount,U)}O=A?new THREE.LineSegments(B,C):P?new THREE.Points(B,C):new THREE.Mesh(B,C)}else O=A?new THREE.LineSegments(B,C[0]):P?new THREE.Points(B,C[0]):new THREE.Mesh(B,C[0]);O.name=M.name,V.add(O)}}return V}}),t}();